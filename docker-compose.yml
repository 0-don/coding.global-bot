version: "3.8"

services:
  coding-global-bot:
    container_name: coding-global-bot
    depends_on:
      - coding-global-db
    networks:
      - proxy
    build:
      context: ./
      dockerfile: Dockerfile
      target: prod
    restart: always
  coding-global-db:
    container_name: coding-global-db
    image: postgres:14.4-alpine
    restart: always
    networks:
      - proxy
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    labels:
      - 'traefik.enable=true'
      - 'traefik.tcp.routers.tcp.tls=true'
      - 'traefik.tcp.routers.coding-global-db.rule=HostSNI(`*`)'
      - 'traefik.tcp.services.coding-global-db.loadbalancer.server.port=5432'
      - 'traefik.tcp.routers.coding-global-db.entrypoints=coding-global-db'
      - 'traefik.tcp.routers.coding-global-db.service=coding-global-db'
  coding-global-pgbackups:
    container_name: coding-global-pgbackups
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
        - /var/opt/pgbackups:/backups
    links:
        - coding-global-db
    depends_on:
        - coding-global-db
    environment:
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_DB=${POSTGRES_HOST}
        - POSTGRES_USER=${POSTGRES_DB}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
        - SCHEDULE=@hourly
        - BACKUP_KEEP_DAYS=7
        - BACKUP_KEEP_WEEKS=4
        - BACKUP_KEEP_MONTHS=6
        - HEALTHCHECK_PORT=8080
volumes:
  postgres:
    driver: local

networks:
  proxy:
    external: false
    name: proxy
