// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VoiceType {
  JOIN
  LEAVE
}

enum Mutetype {
  MUTE
  UNMUTE
}

model Guild {
  guildId          String             @id @unique
  guildName        String
  lookback         Int                @default(9999)
  MemberGuild      MemberGuild[]
  MemberBump       MemberBump[]
  MemberRole       MemberRole[]
  MemberMessages   MemberMessages[]
  GuildVoiceEvents GuildVoiceEvents[]
  GuildMuteEvents  GuildMuteEvents[]
}

model GuildVoiceEvents {
  id        Int       @id @default(autoincrement())
  memberId  String
  guildId   String
  channelId String
  type      VoiceType
  member    Member    @relation(fields: [memberId], references: [memberId])
  guild     Guild     @relation(fields: [guildId], references: [guildId])
  createdAt DateTime  @default(now())
}

model GuildMuteEvents {
  id        Int      @id @default(autoincrement())
  memberId  String
  guildId   String
  channelId String
  type      Mutetype
  member    Member   @relation(fields: [memberId], references: [memberId])
  guild     Guild    @relation(fields: [guildId], references: [guildId])
  createdAt DateTime @default(now())
}

model Member {
  memberId         String             @id @unique
  username         String
  roles            MemberRole[]
  guilds           MemberGuild[]
  bumps            MemberBump[]
  MemberMessages   MemberMessages[]
  GuildVoiceEvents GuildVoiceEvents[]
  GuildMuteEvents  GuildMuteEvents[]
}

model MemberMessages {
  id        Int      @id @default(autoincrement())
  memberId  String
  guildId   String
  messageId String   @unique
  channelId String
  member    Member   @relation(fields: [memberId], references: [memberId], onDelete: Cascade)
  guild     Guild    @relation(fields: [guildId], references: [guildId])
  createdAt DateTime @default(now())
}

model MemberGuild {
  id       Int     @id @default(autoincrement())
  memberId String
  guildId  String
  status   Boolean
  lookback Int     @default(9999)
  member   Member  @relation(fields: [memberId], references: [memberId], onDelete: Cascade)
  guild    Guild   @relation(fields: [guildId], references: [guildId])

  @@unique([memberId, guildId], name: "member_guild")
}

model MemberRole {
  id       Int    @id @default(autoincrement())
  roleId   String
  guildId  String
  memberId String
  member   Member @relation(fields: [memberId], references: [memberId], onDelete: Cascade)
  guild    Guild  @relation(fields: [guildId], references: [guildId])

  @@unique([memberId, roleId], name: "member_role")
}

model MemberBump {
  id       Int    @id @default(autoincrement())
  memberId String
  guildId  String
  count    Int
  member   Member @relation(fields: [memberId], references: [memberId], onDelete: Cascade)
  guild    Guild  @relation(fields: [guildId], references: [guildId])

  @@unique([memberId, guildId], name: "member_guild")
}
