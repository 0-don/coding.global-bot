name: Docker Prod

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch .env
          echo TOKEN=${{ secrets.TOKEN }} >> .env

          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env

          echo OPEN_AI=${{ secrets.OPEN_AI }} >> .env
          echo DEEPL=${{ secrets.DEEPL }} >> .env

          echo HELPER_ROLES=${{ secrets.HELPER_ROLES }} >> .env
          echo STATUS_ROLES=${{ secrets.STATUS_ROLES }} >> .env
          echo MEMBER_ROLES=${{ secrets.MEMBER_ROLES }} >> .env
          echo GENERAL_CHANNEL=${{ secrets.GENERAL_CHANNEL }} >> .env
          echo VERIFY_CHANNEL=${{ secrets.VERIFY_CHANNEL }} >> .env
          echo BOT_CHANNEL=${{ secrets.BOT_CHANNEL }} >> .env
          echo VOICE_EVENT_CHANNEL=${{ secrets.VOICE_EVENT_CHANNEL }} >> .env
          echo JOIN_EVENT_CHANNEL=${{ secrets.JOIN_EVENT_CHANNEL }} >> .env
          echo MEMBERS_COUNT_CHANNEL=${{ secrets.MEMBERS_COUNT_CHANNEL }} >> .env
          echo IS_CONSTRAINED_TO_BOT_CHANNEL=${{ secrets.IS_CONSTRAINED_TO_BOT_CHANNEL }} >> .env
          echo SHOULD_LOG_VOICE_EVENTS=${{ secrets.SHOULD_LOG_VOICE_EVENTS }} >> .env
          echo SHOULD_COUNT_MEMBERS=${{ secrets.SHOULD_COUNT_MEMBERS }} >> .env
          echo BOT_ICON=${{ secrets.BOT_ICON }} >> .env

          cat .env

      - name: Docker run
        run: docker compose up -d --force-recreate --build

      - name: remove unused images, containers, volumes, and networks
        run: docker image prune -a -f --filter "until=24h" && docker container prune -f --filter "until=24h" && docker volume prune -f && docker network prune -f --filter "until=24h"
